name: Store image versions

on:
  repository_dispatch:
    types: [worker-release]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      worker-version: ${{ github.event.client_payload.worker_version }}
      compiler-version: ${{ github.event.client_payload.compiler_version }}
      chrome-runner-version: ${{ github.event.client_payload.chrome_runner_version }}
      firefox-runner-version: ${{ github.event.client_payload.firefox_runner_version }}
      delegator-version: ${{ github.event.client_payload.delegator_version }}

    steps:
      - name: Output payload
        env:
          PAYLOAD: ${{ toJson(github.event.client_payload) }}
        run: echo "$PAYLOAD"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout bash-ga-ci-tools
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-ga-ci-tools
          path: ./vendor/smartassert/bash-ga-ci-tools
          ref: main

      - name: Output
        env:
          OUTPUTS: ${{ toJson(needs.setup.outputs) }}
        run: |
          echo "$OUTPUTS"
          ./vendor/smartassert/bash-ga-ci-tools/src/json-contains-no-empty-values.sh


  store:
    name: Store
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]
    if: ${{ needs.setup.outputs.worker-version != 'master' }}
    outputs:
      create-release: ${{ steps.auto-commit-action.outputs.changes_detected }}
      commit-hash: ${{ steps.auto-commit-action.outputs.commit_hash }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Update
        run: |
          JSON="{
            \"compiler\": \"${{ needs.setup.outputs.compiler-version }}\",
            \"chrome_runner\": \"${{ needs.setup.outputs.chrome-runner-version }}\",
            \"firefox_runner\": \"${{ needs.setup.outputs.firefox-runner-version }}\",
            \"delegator\": \"${{ needs.setup.outputs.delegator-version }}\",
            \"worker\": \"${{ needs.setup.outputs.worker-version }}\"
          }"

          echo "$JSON" > ./image-versions.json

      - name: Commit
        id: auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Automatic image-versions.json for worker release ${{ needs.setup.outputs.worker-version }}"

  trigger-create-release:
    name: Trigger create release workflow
    runs-on: ubuntu-latest
    needs: [setup, store]
    if: ${{ needs.store.outputs.create-release == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN_SELF }}

      - name: Trigger create-release workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Create release
          token: ${{ secrets.PAT_TOKEN_SELF }}
          inputs: |
            {
              "commit-hash": "${{ needs.store.outputs.commit-hash }}",
              "should-release": "true"
            }
