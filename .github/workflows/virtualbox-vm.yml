name: VirtualBox VM

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: macos-10.15

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set version to master (remove this step)
        id: version
        run: echo "::set-output name=value::master"

      - name: Get versions from image-versions.env
        id: image-versions
        env:
          ENV_FILE_PATH: ./image-versions.env
        run: ./ci/read-env-file.sh

      - name: Output image versions
        env:
          COMPILER_VERSION: ${{ steps.image-versions.outputs.COMPILER_VERSION }}
          CHROME_RUNNER_VERSION: ${{ steps.image-versions.outputs.CHROME_RUNNER_VERSION }}
          FIREFOX_RUNNER_VERSION: ${{ steps.image-versions.outputs.FIREFOX_RUNNER_VERSION }}
          DELEGATOR_VERSION: ${{ steps.image-versions.outputs.DELEGATOR_VERSION }}
          WORKER_VERSION: ${{ steps.image-versions.outputs.WORKER_VERSION }}
        run: |
          echo COMPILER_VERSION $COMPILER_VERSION
          echo CHROME_RUNNER_VERSION $CHROME_RUNNER_VERSION
          echo FIREFOX_RUNNER_VERSION $FIREFOX_RUNNER_VERSION
          echo DELEGATOR_VERSION $DELEGATOR_VERSION
          echo WORKER_VERSION $WORKER_VERSION

      - name: Show package versions
        run: |
          vagrant --version
          VBoxManage --version

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.vagrant.d/boxes/focal-server-cloudimg-amd64-vagrant
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

#      - name: Validate Vagrantfile
#        run: vagrant validate
#
#      - name: Lint provision.sh
#        run: |
#          brew install shellcheck
#          shellcheck provision.sh
#          shellcheck self-test/*.sh

      - name: Vagrant up
        id: vagrant-up
        env:
          VAGRANT_DISABLE_VBOXSYMLINKCREATE: 1
          HOST_PORT: 80
          COMPILER_VERSION: ${{ steps.image-versions.outputs.COMPILER_VERSION }}
          CHROME_RUNNER_VERSION: ${{ steps.image-versions.outputs.CHROME_RUNNER_VERSION }}
          FIREFOX_RUNNER_VERSION: ${{ steps.image-versions.outputs.FIREFOX_RUNNER_VERSION }}
          DELEGATOR_VERSION: ${{ steps.image-versions.outputs.DELEGATOR_VERSION }}
          WORKER_VERSION: ${{ steps.image-versions.outputs.WORKER_VERSION }}
          STDERR_FILE: vagrant-up-stderr.txt
        run: ./.github/workflows/vagrant-up-output-stderr.sh

      - name: Examine vagrant output for expected failure
        env:
          STDERR_FILE: vagrant-up-stderr.txt
        run: |
          CONTENT="$(cat $STDERR_FILE)"
          ALLOWED_ERROR_COUNT=$(echo $CONTENT | grep "toomanyrequests" | grep -o "docker.com/increase-rate-limit" | wc -l)

          if [ 0 -eq $ALLOWED_ERROR_COUNT ]; then
            echo "$CONTENT"
            exit 1
          fi
