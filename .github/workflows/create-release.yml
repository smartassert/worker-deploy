name: Create release

on:
  workflow_dispatch:
    inputs:
      commit-hash:
        description: Commit hash to release from
        required: true
      should-release:
        description: Create release?
        required: true
        default: "true"

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ github.event.inputs.commit-hash }}
      should-release: ${{ github.event.inputs.should-release }}
      release-notes-path: ${{ steps.release-notes-path.outputs.value}}
      release-tag: ${{ steps.image-versions.outputs.WORKER_VERSION }}
      compiler-version: ${{ steps.image-versions.outputs.COMPILER_VERSION }}
      chrome-runner-version: ${{ steps.image-versions.outputs.CHROME_RUNNER_VERSION }}
      firefox-runner-version: ${{ steps.image-versions.outputs.FIREFOX_RUNNER_VERSION }}
      delegator-version: ${{ steps.image-versions.outputs.DELEGATOR_VERSION }}
      worker-version: ${{ steps.image-versions.outputs.WORKER_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.commit-hash }}

      - name: Checkout bash-read-env-file
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-read-env-file
          path: ./vendor/smartassert/bash-read-env-file
          ref: main

      - name: Read image versions
        id: image-versions
        env:
          ENV_FILE_PATH: ./image-versions.env
        run: ./vendor/smartassert/bash-read-env-file/src/read-env-file-ga.sh

      - name: Set release notes path
        id: release-notes-path
        run: echo "::set-output name=value::release-notes.md"

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Output
        env:
          outputs: ${{ toJson(needs.setup.outputs) }}
        run: echo "$outputs"

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.setup.outputs.commit-hash }}

      - name: Create release notes
        env:
          COMPILER_VERSION: ${{ needs.setup.outputs.compiler-version }}
          CHROME_RUNNER_VERSION: ${{ needs.setup.outputs.chrome-runner-version }}
          FIREFOX_RUNNER_VERSION: ${{ needs.setup.outputs.firefox-runner-version }}
          DELEGATOR_VERSION: ${{ needs.setup.outputs.delegator-version }}
          WORKER_VERSION: ${{ needs.setup.outputs.worker-version }}
          RELEASE_NOTES_PATH: ${{ needs.setup.outputs.release-notes-path }}
        run: ./scripts/create-release-notes.sh > "$RELEASE_NOTES_PATH"

      - name: Create release
        if: ${{ needs.setup.outputs.should-release == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN_SELF }}
          TAG: ${{ needs.setup.outputs.release-tag }}
          TARGET: ${{ needs.setup.outputs.commit-hash }}
          TITLE: "Automatic release ${{ needs.setup.outputs.release-tag }}"
          NOTES_FILE: ${{ needs.setup.outputs.release-notes-path }}
        run: gh release create "$TAG" --target "$TARGET" --title "$TITLE" --notes-file "$NOTES_FILE"
